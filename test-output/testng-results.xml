<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="8" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-10-23T16:50:31 IST" name="Default suite" finished-at="2024-10-23T16:50:32 IST" duration-ms="115">
    <groups>
      <group name="multiplication">
        <method signature="CalculatorTest.testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" name="testMultiply" class="test.calculator.CalculatorTest"/>
      </group> <!-- multiplication -->
    </groups>
    <test started-at="2024-10-23T16:50:31 IST" name="Default test" finished-at="2024-10-23T16:50:32 IST" duration-ms="115">
      <class name="test.calculator.CalculatorTest">
        <test-method is-config="true" signature="setUpClass()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="setUpClass" finished-at="2024-10-23T16:50:31 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="setUp" finished-at="2024-10-23T16:50:31 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testAdditionPositive()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="testAdditionPositive" finished-at="2024-10-23T16:50:31 IST" duration-ms="14" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Addition test failed expected [8.0] but found [9.0]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Addition test failed expected [8.0] but found [9.0]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEquals(Assert.java:701)
at test.calculator.CalculatorTest.testAdditionPositive(CalculatorTest.java:37)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAdditionPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="tearDown" finished-at="2024-10-23T16:50:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="setUp" finished-at="2024-10-23T16:50:31 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testDivisionByZero()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:31 IST" name="testDivisionByZero" finished-at="2024-10-23T16:50:32 IST" duration-ms="2" status="FAIL">
          <exception class="org.testng.TestException">
            <message>
              <![CDATA[
Expected exception of type class java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.TestException: 
Expected exception of type class java.lang.ArithmeticException but got java.lang.NumberFormatException: Attempt to divide by zero
at org.testng.internal.ExpectedExceptionsHolder.wrongException(ExpectedExceptionsHolder.java:68)
at org.testng.internal.TestInvoker.considerExceptions(TestInvoker.java:739)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:634)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: java.lang.NumberFormatException: Attempt to divide by zero
at com.epam.tat.module4.Calculator.div(Calculator.java:34)
at test.calculator.CalculatorTest.testDivisionByZero(CalculatorTest.java:61)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
... 22 more
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.TestException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDivisionByZero -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMultiplicationPositive()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiplicationPositive" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiplicationPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiply" data-provider="multiplicationData" finished-at="2024-10-23T16:50:32 IST" duration-ms="7" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiply" data-provider="multiplicationData" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[-2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiply" data-provider="multiplicationData" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[-3]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiply" data-provider="multiplicationData" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testMultiply(int,int,int)[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testMultiply" data-provider="multiplicationData" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[2147483647]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMultiply -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method signature="testSqrtPositive()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testSqrtPositive" finished-at="2024-10-23T16:50:32 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrtPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="setUp" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="testSubtractionPositive()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="testSubtractionPositive" finished-at="2024-10-23T16:50:32 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSubtractionPositive -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDown" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:test.calculator.CalculatorTest@6404f418]" started-at="2024-10-23T16:50:32 IST" name="tearDownClass" finished-at="2024-10-23T16:50:32 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- test.calculator.CalculatorTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
